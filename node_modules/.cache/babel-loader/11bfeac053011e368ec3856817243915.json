{"ast":null,"code":"function set(key,value){if(key===undefined||value===undefined){throw new Error(\"Key or Value can not undefined!\");}if(typeof value==='object'){value=JSON.stringify(value);}localStorage.setItem(key,window.btoa(value));}function get(key){var isObject=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;if(typeof key===\"undefined\"){throw new Error(\"key can not undefined!\");}var value=localStorage.getItem(key);if(value){value=window.atob(value);}if(isObject){return JSON.parse(value);}return value;}function reset(){localStorage.clear();}var storage={set:set,get:get,reset:reset};export default storage;","map":{"version":3,"sources":["/home/swapnil/reactproj/pro/src/utils/storage.js"],"names":["set","key","value","undefined","Error","JSON","stringify","localStorage","setItem","window","btoa","get","isObject","getItem","atob","parse","reset","clear","storage"],"mappings":"AAAA,QAASA,CAAAA,GAAT,CAAaC,GAAb,CAAkBC,KAAlB,CAAyB,CACrB,GAAID,GAAG,GAAKE,SAAR,EAAqBD,KAAK,GAAKC,SAAnC,CAA8C,CAC1C,KAAM,IAAIC,CAAAA,KAAJ,CAAU,iCAAV,CAAN,CACH,CACD,GAAI,MAAOF,CAAAA,KAAP,GAAiB,QAArB,CAA+B,CAC3BA,KAAK,CAAGG,IAAI,CAACC,SAAL,CAAeJ,KAAf,CAAR,CACH,CACDK,YAAY,CAACC,OAAb,CAAqBP,GAArB,CAA0BQ,MAAM,CAACC,IAAP,CAAYR,KAAZ,CAA1B,EACH,CAED,QAASS,CAAAA,GAAT,CAAaV,GAAb,CAAoC,IAAlBW,CAAAA,QAAkB,2DAAP,KAAO,CAChC,GAAI,MAAOX,CAAAA,GAAP,GAAe,WAAnB,CAAgC,CAC5B,KAAM,IAAIG,CAAAA,KAAJ,CAAU,wBAAV,CAAN,CACH,CACD,GAAIF,CAAAA,KAAK,CAAGK,YAAY,CAACM,OAAb,CAAqBZ,GAArB,CAAZ,CACA,GAAIC,KAAJ,CAAW,CACPA,KAAK,CAAGO,MAAM,CAACK,IAAP,CAAYZ,KAAZ,CAAR,CACH,CACD,GAAIU,QAAJ,CAAc,CACV,MAAOP,CAAAA,IAAI,CAACU,KAAL,CAAWb,KAAX,CAAP,CACH,CACD,MAAOA,CAAAA,KAAP,CACH,CAED,QAASc,CAAAA,KAAT,EAAiB,CACbT,YAAY,CAACU,KAAb,GACH,CAGD,GAAMC,CAAAA,OAAO,CAAG,CACZlB,GAAG,CAAHA,GADY,CACPW,GAAG,CAAHA,GADO,CACFK,KAAK,CAALA,KADE,CAAhB,CAKA,cAAeE,CAAAA,OAAf","sourcesContent":["function set(key, value) {\n    if (key === undefined || value === undefined) {\n        throw new Error(\"Key or Value can not undefined!\");\n    }\n    if (typeof value === 'object') {\n        value = JSON.stringify(value);\n    }\n    localStorage.setItem(key, window.btoa(value));\n}\n\nfunction get(key, isObject = false) {\n    if (typeof key === \"undefined\") {\n        throw new Error(\"key can not undefined!\");\n    }\n    let value = localStorage.getItem(key);\n    if (value) {\n        value = window.atob(value);\n    }\n    if (isObject) {\n        return JSON.parse(value);\n    }\n    return value;\n}\n\nfunction reset() {\n    localStorage.clear();\n}\n\n\nconst storage = {\n    set, get, reset\n};\n\n\nexport default storage;"]},"metadata":{},"sourceType":"module"}